export class DrawerListItem {
    /** Trigger a press event */
    async TriggerPress(e) {
        this.pressEvent.emit(e);
    }
    render() {
        return;
    }
    static get is() { return "materials-drawer-list-item"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["drawer-list-item.css"]
    }; }
    static get styleUrls() { return {
        "$": ["drawer-list-item.css"]
    }; }
    static get properties() { return {
        "label": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "The drawer item label"
            },
            "attribute": "label",
            "reflect": false
        },
        "activated": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Mark this drawer item as activated"
            },
            "attribute": "activated",
            "reflect": false
        },
        "icon": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Render an icon (from material-icons library)"
            },
            "attribute": "icon",
            "reflect": false
        },
        "targetUrl": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "render with a href=\"${targetUrl}\""
            },
            "attribute": "target-url",
            "reflect": false
        }
    }; }
    static get events() { return [{
            "method": "pressEvent",
            "name": "press",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": "Emitted when it get pressed"
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
    static get methods() { return {
        "TriggerPress": {
            "complexType": {
                "signature": "(e: any) => Promise<void>",
                "parameters": [{
                        "tags": [],
                        "text": ""
                    }],
                "references": {
                    "Promise": {
                        "location": "global"
                    }
                },
                "return": "Promise<void>"
            },
            "docs": {
                "text": "Trigger a press event",
                "tags": []
            }
        }
    }; }
}
