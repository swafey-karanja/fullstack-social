import { EventEmitter } from '../../stencil.core';
/**
* Class that represent an autocomplete element
* composed by a textfield
* and a menu with selectable items for autocompletion
*/
export declare class Autocomplete {
    /**
    * Function of autocompletion to pass to the element
    * called during onInput of the text-field
    */
    autocomplete: (search: string) => Promise<Map<string, string>>;
    /**
    * Value of the autocomplete text-field
    * composed by a label to be displayed in the text-field
    * and a value that is a real value
    * if no label given, label = value
    */
    value: {
        label?: string;
        value: string;
    };
    /**
    * Apply low density on the element
    */
    dense: boolean;
    /**
     * Label of the autocomplete
     */
    label: string;
    /**
     * Adds an icon at the end of the text field
     */
    trailingIcon: string;
    /**
     * Limits the number of suggestions displayed in list
     */
    maxSuggestions: number;
    /**
    * Change event emitted when value is selected
    */
    change: EventEmitter<{
        label?: string;
        value: string;
    }>;
    suggestions: Map<string, string>;
    showSuggestions: boolean;
    selectedIndex: number;
    private textElement;
    componentDidLoad(): void;
    componentWillLoad(): void;
    watchValue(): void;
    navigateSuggestions(event: KeyboardEvent): any;
    clearSuggestions(): void;
    selectSuggestion(key: string): void;
    execAutocomplete(event: any): void;
    handleChange(): void;
    render(): any;
}
