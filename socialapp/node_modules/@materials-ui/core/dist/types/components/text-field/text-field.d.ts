import { EventEmitter } from '../../stencil.core';
export declare class TextField {
    private mdcTextField;
    private mdcTextFieldHelperText;
    private textFieldEl;
    private floatingLabelEl;
    private lineRippleEl;
    private helperTextEl;
    private notchedOutlineEl;
    private inputEl;
    host: HTMLMaterialsTextFieldElement;
    input: EventEmitter;
    change: EventEmitter;
    /** Emitted when a trailing icon is pressed */
    trailingIconPress: EventEmitter;
    /** Emitted when a leading icon is pressed */
    leadingIconPress: EventEmitter;
    fullwidth: boolean;
    dense: boolean;
    outlined: boolean;
    focused: boolean;
    disabled: boolean;
    readonly: boolean;
    leadingIcon: string;
    trailingIcon: string;
    label: string;
    name: string;
    /** The maxlength attribute specifies the maximum number of characters */
    maxlength: number;
    /** Hide clear button (webkit + Edge, Moz not supported) */
    hideNativeClear: boolean;
    type: string;
    required: boolean;
    pattern: string;
    value: any;
    width: number;
    overflow: boolean;
    helperText: string;
    persistent: boolean;
    /** Add a title to the trailing icon */
    trailingIconTitle: string;
    /** Add a title to the leading icon */
    leadingIconTitle: string;
    customValidation: () => Promise<string>;
    realHelperText: string;
    componentWillLoad(): void;
    updateValue(): Promise<void>;
    componentDidLoad(): void;
    getClasses(): {
        'mdc-text-field': boolean;
        'mdc-text-field--disabled': boolean;
        'mdc-text-field--fullwidth': boolean;
        'mdc-text-field--outlined': boolean;
        'mdc-text-field--focused': boolean;
        'mdc-text-field--no-label': boolean;
        'mdc-text-field--with-leading-icon': boolean;
        'mdc-text-field--with-trailing-icon': boolean;
    };
    getLabelClasses(): {
        'mdc-floating-label': boolean;
    };
    isValid(): Promise<boolean>;
    forceValidation(): Promise<void>;
    render(): any;
}
