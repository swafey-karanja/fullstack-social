/**
 * S'utilise avec une icon, img, svg.
 *
 * ## Exemple Utilisation:
 *    <materials-icon-button icon="settings">
 *    <materials-icon-button img="/url/settings">
 *    <materials-icon-button img="data:image/svg+xml;base64,[data]">
 *    <materials-icon-button svg>
 *      <svg slot="svg"></svg>
 *    </materials-icon-button>
 *
 * ### Toggle
 *
 *    <materials-icon-button icon="settings" icon-off="settings_border">
 *
 *    <materials-icon-button img="/url/settings.jpg" img-off="/url/settings_border.jpg">
 *
 *    <materials-icon-button svg>
 *       <svg slot="svg"></svg>
 *       <svg slot="svg-off"></svg>
 *    </materials-icon-button>
 *
 * @deprecated N'utilisez plus la prop "iconOn" mais "icon" à la place
 */
export declare class IconButton {
    host: HTMLMaterialsIconButtonElement;
    iconButtonEl: any;
    iconButtonToggleEl: any;
    disabled: boolean;
    pressed: boolean;
    icon: string;
    iconOn: string;
    iconOff: string;
    svg: boolean;
    svgOff: string;
    img: string;
    imgOff: string;
    label: string;
    labelOn: string;
    labelOff: string;
    large: boolean;
    dense: boolean;
    componentDidLoad(): void;
    allowClickEvent(ev: Event): void;
    /**
     * Set la width et height à 24;
     * Et ajoute les classes MDC aux elements svg inséré dans les slot svg & svg-off.
     */
    initSvg(): void;
    renderIconButtonToggle(): any;
    iconToggle: () => any[];
    svgToggle: () => any[];
    imgToggle: () => any[];
    renderIconButton(): any;
    getIconClasses(): {
        'mdc-icon-button__icon': boolean;
        'material-icons': boolean;
    };
    setClassIconButtonToggle(): {
        'mdc-icon-button': boolean;
        'mdc-icon-button--on': boolean;
    };
    render(): any;
}
