import { EventEmitter } from '../../stencil.core';
export declare class DateField {
    private materialsMenuDatepickerEl;
    private materialsTextFieldEl;
    /** Emitted when the input text change */
    input: EventEmitter;
    /**
     * Styles the date field as a full width text field.
     * Warning : do not use with outlined
     */
    fullwidth: boolean;
    /** Styles the date field as a dense text field. */
    dense: boolean;
    /** Render an outlined date field */
    outlined: boolean;
    /** Styles the date field as a text field in focus. */
    focused: boolean;
    /** Styles the date field as a disabled text field. */
    disabled: boolean;
    /**
     * Add a leading icon to ths date field.
     * You have to pass a material icon name
     */
    leadingIcon: string;
    /** The date field label. */
    label: string;
    /** Mark this date field as required */
    required: boolean;
    /** The date field value */
    value: any;
    /** The date field width */
    width: number;
    /** Add an helper text to this date field */
    helperText: string;
    /** Set the helper text persistant (appears on focus otherwise) */
    persistent: boolean;
    /**
     * Provide a custom validation function to this time-field.
     * In case of error, the promise should return a message with the
     * error message to display
     */
    customValidation: () => Promise<string>;
    /** Display a datepicker when clicking on the date-field */
    datepicker: boolean;
    /** The datepicker has a today button */
    datepickerTodayPicker: boolean;
    /** The datepicker has a month navigation bar */
    datepickerMonthPicker: boolean;
    /** The datepicker has a year navigation bar */
    datepickerYearPicker: boolean;
    componentWillLoad(): void;
    updateValue(): void;
    isValid(): Promise<boolean>;
    forceValidation(): Promise<void>;
    renderDatepicker(): any;
    openPicker(ev: any): Promise<void>;
    render(): any;
}
