var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { r as registerInstance, h, g as getElement } from './index-c0dc768b.js';
var Stepper = /** @class */ (function () {
    function class_1(hostRef) {
        registerInstance(this, hostRef);
        this.activeStep = 0;
        this.inactiveSteps = [];
    }
    class_1.prototype.componentDidLoad = function () {
        var _this = this;
        Array.from(this.host.querySelectorAll('materials-step')).forEach(function (step) {
            if (!step.showButtons) {
                step.showButtons = _this.showButtons;
            }
        });
        this.calcIndexes();
    };
    class_1.prototype.calcIndexes = function () {
        return __awaiter(this, void 0, void 0, function () {
            var activeSteps, inactiveSteps;
            var _this = this;
            return __generator(this, function (_a) {
                activeSteps = Array.from(this.host.querySelectorAll('materials-step')).filter(function (_val, index) { return _this.inactiveSteps.indexOf(index) < 0; });
                activeSteps.forEach(function (step, index) {
                    step.style.display = 'flex';
                    step.index = index;
                    step.active = (index === 0);
                    if (step.index === (activeSteps.length - 1)) {
                        step.isLast = true;
                    }
                });
                inactiveSteps = Array.from(this.host.querySelectorAll('materials-step')).filter(function (_val, index) { return _this.inactiveSteps.indexOf(index) > -1; });
                inactiveSteps.forEach(function (step) { return step.style.display = 'none'; });
                this.adjustHeight();
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.handleActiveStepUpdate = function () {
        return __awaiter(this, void 0, void 0, function () {
            var steps;
            var _this = this;
            return __generator(this, function (_a) {
                steps = Array.from(this.host.querySelectorAll('materials-step')).filter(function (_val, index) { return _this.inactiveSteps.indexOf(index) < 0; });
                steps.forEach(function (step) {
                    if (step.index === _this.activeStep) {
                        _this.currentStep = step;
                    }
                    step.active = (step.index === _this.activeStep);
                });
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.switchStep = function (ev) {
        var _this = this;
        // On peut se rendre sur un step si tous les steps précédent sont valides ou optionels
        var steps = Array.from(this.host.querySelectorAll('materials-step')).filter(function (_val, index) { return _this.inactiveSteps.indexOf(index) < 0; });
        var invalidPrevious = steps.find(function (e) { return !(e.status === 'valid' || e.optional) && e.index < ev.detail; });
        if (!invalidPrevious) {
            this.activeStep = ev.detail;
        }
    };
    class_1.prototype.openStep = function (index) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.activeStep = index;
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.nextStep = function () {
        return __awaiter(this, void 0, void 0, function () {
            var steps;
            var _this = this;
            return __generator(this, function (_a) {
                steps = Array.from(this.host.querySelectorAll('materials-step')).filter(function (_val, index) { return _this.inactiveSteps.indexOf(index) < 0; });
                if (this.activeStep < (steps.length - 1)) {
                    this.activeStep++;
                }
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.previousStep = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.activeStep > 0) {
                    this.activeStep--;
                }
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.adjustHeight = function () {
        return __awaiter(this, void 0, void 0, function () {
            var steps;
            return __generator(this, function (_a) {
                steps = Array.from(this.host.querySelectorAll('materials-step'));
                if (steps) {
                    steps.forEach(function (step) {
                        step.adjustHeight();
                    });
                }
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.render = function () {
        return (h("slot", null));
    };
    Object.defineProperty(class_1.prototype, "host", {
        get: function () { return getElement(this); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(class_1, "watchers", {
        get: function () {
            return {
                "inactiveSteps": ["calcIndexes"],
                "activeStep": ["handleActiveStepUpdate"]
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(class_1, "style", {
        get: function () { return ":host{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:start;justify-content:flex-start;overflow:hidden}"; },
        enumerable: true,
        configurable: true
    });
    return class_1;
}());
export { Stepper as materials_stepper };
